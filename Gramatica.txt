Terminales = { CADENA, ENTERO, DECIMAL, BOOL, CARACTER, ID, FINCADENA, IMPRIMIR, VAR, CONST, DOS_PUNTOS, IGUAL, PAR_A, PAR_C, MAS, MENOS, UMENOS, MULT, MODULO, POTENCIA, DIV, IGUALACION, DIFERENCIA, MAYOR_IGUAL, MENOR_IGUAL, MENOR, MAYOR, OR, AND, XOR, NOT, INCREMENTO, DECREMENTO, INT, DOUBLE, CHAR, BOOLEAN, STRING, IF, ELSE, LLAVE_A, LLAVE_C, FORC, WHILEC, DO_C, FIN, CONTINUAR, DEFAULT, FLECHA, MATCH }

No terminales = { INICIO, INSTRUCCIONES, INSTRUCCION, EXPRESION, SENT_IF, BUCLE_IF, IMPRESION, DECLARACION, ASIGNACION, OPERACIONU, MUTABILIDAD, TIPO, FORB, ACTU_FOR, ASIG, CWHILE, DOWHILE, FINB, CMATCH, CASOS, CASOSE, CASOSD }


INICIO ::= <INSTRUCCIONES>

Producciones = {

<INSTRUCCIONES> ::= <INSTRUCCIONES> <INSTRUCCION>
                  | <INSTRUCCION>

<INSTRUCCION> ::= <IMPRESION>
                | <DECLARACION>
                | <ASIGNACION>
                | <OPERACIONU>
                | <SENT_IF>
                | <FORB>
                | <CWHILE>
                | <DOWHILE>
                | <FINB>
                | <CMATCH>
                | error FINCADENA

<CMATCH> ::= MATCH <EXPRESION> LLAVE_A <CASOS> LLAVE_C

<CASOS> ::= <EXPRESION> FLECHA LLAVE_A <INSTRUCCIONES> LLAVE_C <CASOS>
           | <CASOSE>
           | <CASOSD>

<CASOSD> ::= DEFAULT FLECHA LLAVE_A <INSTRUCCIONES> LLAVE_C

<CASOSE> ::= <EXPRESION> FLECHA LLAVE_A <INSTRUCCIONES> LLAVE_C

<FINB> ::= FIN FINCADENA
         | CONTINUAR FINCADENA

<DOWHILE> ::= DO_C LLAVE_A <INSTRUCCIONES> LLAVE_C WHILEC PAR_A <EXPRESION> PAR_C FINCADENA

<CWHILE> ::= WHILEC PAR_A <EXPRESION> PAR_C LLAVE_A <INSTRUCCIONES> LLAVE_C

<FORB> ::= FORC PAR_A <ASIG> <EXPRESION> FINCADENA <ACTU_FOR> PAR_C LLAVE_A <INSTRUCCIONES> LLAVE_C

<ASIG> ::= <ASIGNACION>
         | <DECLARACION>

<ACTU_FOR> ::= ID IGUAL <EXPRESION>
             | ID INCREMENTO
             | ID DECREMENTO

<SENT_IF> ::= IF PAR_A <EXPRESION> PAR_C LLAVE_A <INSTRUCCIONES> LLAVE_C
            | IF PAR_A <EXPRESION> PAR_C LLAVE_A <INSTRUCCIONES> LLAVE_C <BUCLE_IF>
            | IF PAR_A <EXPRESION> PAR_C LLAVE_A <INSTRUCCIONES> LLAVE_C ELSE LLAVE_A <INSTRUCCIONES> LLAVE_C

<BUCLE_IF> ::= ELSE <SENT_IF>

<IMPRESION> ::= IMPRIMIR PAR_A <EXPRESION> PAR_C FINCADENA

<DECLARACION> ::= <MUTABILIDAD> ID DOS_PUNTOS <TIPO> IGUAL <EXPRESION> FINCADENA
                | <MUTABILIDAD> ID DOS_PUNTOS <TIPO> FINCADENA

<ASIGNACION> ::= ID IGUAL <EXPRESION> FINCADENA
               | ID IGUAL <OPERACIONU>

<OPERACIONU> ::= ID INCREMENTO FINCADENA
               | ID DECREMENTO FINCADENA

<EXPRESION> ::= NOT <EXPRESION>
             | <EXPRESION> XOR <EXPRESION>
             | <EXPRESION> AND <EXPRESION>
             | <EXPRESION> OR <EXPRESION>
             | <EXPRESION> MENOR <EXPRESION>
             | <EXPRESION> MAYOR <EXPRESION>
             | <EXPRESION> MENOR_IGUAL <EXPRESION>
             | <EXPRESION> MAYOR_IGUAL <EXPRESION>
             | <EXPRESION> DIFERENCIA <EXPRESION>
             | <EXPRESION> IGUALACION <EXPRESION>
             | <EXPRESION> MENOS <EXPRESION>
             | <EXPRESION> MAS <EXPRESION>
             | <EXPRESION> MODULO <EXPRESION>
             | <EXPRESION> POTENCIA <EXPRESION>
             | <EXPRESION> DIV <EXPRESION>
             | <EXPRESION> MULT <EXPRESION>
             | MENOS <EXPRESION>
             | PAR_A <TIPO> PAR_C <EXPRESION>
             | PAR_A <EXPRESION> PAR_C
             | ENTERO
             | DECIMAL
             | CADENA
             | BOOL
             | ID
             | CARACTER

<TIPO> ::= INT
         | DOUBLE
         | CHAR
         | STRING
         | BOOLEAN

<MUTABILIDAD> ::= VAR
                | CONST
}